meta {
  name: JSON Asserts
  type: http
  seq: 3
}

get {
  url: https://musicbrainz.org/ws/2/artist/:artistId?fmt=json
  body: none
  auth: none
}

params:query {
  fmt: json
}

params:path {
  artistId: 084308bd-1654-436f-ba03-df6697104e19
}

assert {
  res.status: eq 200
  res.status: neq 400
  res.responseTime: lte 500
  res.body.name: eq Green Day
  res.body.name: startsWith Green
  res.body.name: endsWith Day
  res.body.country: eq US
  res.body.country: in ["US","UK"]
  res.body.country: notIn ["IT","FR","ES"]
  res.body.isnis: length 1
  res.body.country: length 2
  res.body.life-span.begin: eq "1989"
  res.body['life-span'].begin: eq "1989"
  res.body['begin-area']['sort-name']: eq Berkeley
  res.body.name: contains Day
  res.body.name: notContains Sfera
  res.body.area['iso-3166-1-codes']: contains US
  res.body.area['iso-3166-1-codes']: notContains IT
  res.responseTime: between 30,500
  res.body.isnis.length: between 1,3
  res.body.name.length: between 5,10
  res.body.ipis: isEmpty
  res.body.disambiguation: isEmpty
  res.body.gender: isNull
  res.body.notexists: isUndefined
  res.body.gender: isDefined
  res.body['life-span'].ended: isFalsy
  res.body: isJson
  res.body.area: isJson
  res.body['life-span'].ended: isBoolean
  res.responseTime: isNumber
  res.body.type: isString
  res.body.country: matches /^U[S|K]$/
}

tests {
  test("Response Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
}
